#include <stdio.h>
#include <stdlib.h>

#define MAX_SIZE 10

typedef struct Stack {
    int arr[MAX_SIZE];
    int top;
} Stack;

void push(Stack* s, int data) {
    if (s->top >= MAX_SIZE - 1) {
        printf("Error: Stack Overflow\n");
        return;
    }
    s->arr[++(s->top)] = data;
}

int pop(Stack* s) {
    if (s->top < 0) {
        printf("Error: Stack Underflow\n");
        return -1;
    }
    return s->arr[(s->top)--];
}

int isEmpty(Stack* s) {
    return s->top == -1;
}

void enqueue(Stack* s1, int data) {
    push(s1, data);
}

int dequeue(Stack* s1, Stack* s2) {
    if (isEmpty(s2)) {
        while (!isEmpty(s1)) {
            push(s2, pop(s1));
        }
    }
    if (isEmpty(s2)) {
        printf("Error: Queue is empty\n");
        return -1;
    }
    return pop(s2);
}

int main() {
    Stack s1 = {.top = -1};
    Stack s2 = {.top = -1};

    enqueue(&s1, 10);
    enqueue(&s1, 20);
    enqueue(&s1, 30);

    printf("Dequeued: %d\n", dequeue(&s1, &s2));
    printf("Dequeued: %d\n", dequeue(&s1, &s2));

    enqueue(&s1, 40);
    printf("Dequeued: %d\n", dequeue(&s1, &s2));
    printf("Dequeued: %d\n", dequeue(&s1, &s2));

    return 0;
}
