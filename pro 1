#include <stdio.h>

#define MAX_SIZE 10

void printMatrix(int matrix[MAX_SIZE][MAX_SIZE], int rows, int cols) {
    for (int i = 0; i < rows; ++i) {
        for (int j = 0; j < cols; ++j) {
            printf("%d\t", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int A[MAX_SIZE][MAX_SIZE], B[MAX_SIZE][MAX_SIZE], C[MAX_SIZE][MAX_SIZE];
    int rowsA, colsA, rowsB, colsB;
    int sum = 0;

    printf("Enter the number of rows for the first matrix: ");
    scanf("%d", &rowsA);
    printf("Enter the number of columns for the first matrix: ");
    scanf("%d", &colsA);

    printf("Enter the number of rows for the second matrix: ");
    scanf("%d", &rowsB);
    printf("Enter the number of columns for the second matrix: ");
    scanf("%d", &colsB);

    if (colsA != rowsB) {
        printf("Error: Matrix multiplication is not possible. The number of columns of the first matrix must be equal to the number of rows of the second matrix.\n");
        return 1;
    }

    printf("\nEnter elements of the first matrix (%d x %d):\n", rowsA, colsA);
    for (int i = 0; i < rowsA; ++i) {
        for (int j = 0; j < colsA; ++j) {
            printf("Enter element A[%d][%d]: ", i, j);
            scanf("%d", &A[i][j]);
        }
    }

    printf("\nEnter elements of the second matrix (%d x %d):\n", rowsB, colsB);
    for (int i = 0; i < rowsB; ++i) {
        for (int j = 0; j < colsB; ++j) {
            printf("Enter element B[%d][%d]: ", i, j);
            scanf("%d", &B[i][j]);
        }
    }

    for (int i = 0; i < rowsA; ++i) {
        for (int j = 0; j < colsB; ++j) {
            sum = 0;
            for (int k = 0; k < colsA; ++k) {
                sum += A[i][k] * B[k][j];
            }
            C[i][j] = sum;
        }
    }

    printf("\nResultant Matrix after multiplication:\n");
    printMatrix(C, rowsA, colsB);

    return 0;
}
